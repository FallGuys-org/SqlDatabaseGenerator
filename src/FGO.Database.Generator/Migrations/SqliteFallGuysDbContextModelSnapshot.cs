// <auto-generated />
using System;
using FGO.Database.Generator;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FGO.Database.Generator.Migrations
{
    [DbContext(typeof(SqliteFallGuysDbContext))]
    partial class SqliteFallGuysDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("FGO.Database.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NameId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemTypeId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RarityId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("NameId");

                    b.HasIndex("RarityId");

                    b.ToTable("CustomisationItems");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItemSource", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomisationItemId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomisationItemId");

                    b.HasIndex("NameId");

                    b.ToTable("CustomisationItemSources");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItemType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NameId");

                    b.ToTable("CustomisationItemTypes");
                });

            modelBuilder.Entity("FGO.Database.Models.LocalisedString", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("English")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LocalisedString");
                });

            modelBuilder.Entity("FGO.Database.Models.Rarity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("BackgroundColor")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ForegroundColor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("NameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NameId");

                    b.ToTable("Rarities");
                });

            modelBuilder.Entity("FGO.Database.Models.Season", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("End")
                        .HasColumnType("TEXT");

                    b.Property<int?>("NameId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ThemeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("NameId");

                    b.HasIndex("ThemeId");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("FGO.Database.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomisationItemId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LabelId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CustomisationItemId");

                    b.HasIndex("LabelId");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("FGO.Database.Models.Currency", b =>
                {
                    b.HasOne("FGO.Database.Models.LocalisedString", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItem", b =>
                {
                    b.HasOne("FGO.Database.Models.CustomisationItemType", "ItemType")
                        .WithMany()
                        .HasForeignKey("ItemTypeId");

                    b.HasOne("FGO.Database.Models.LocalisedString", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.HasOne("FGO.Database.Models.Rarity", "Rarity")
                        .WithMany()
                        .HasForeignKey("RarityId");

                    b.OwnsMany("FGO.Database.Models.ItemPrice", "Prices", b1 =>
                        {
                            b1.Property<string>("CustomisationItemId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<string>("CurrencyId")
                                .HasColumnType("TEXT");

                            b1.Property<double>("Price")
                                .HasColumnType("REAL");

                            b1.HasKey("CustomisationItemId", "Id");

                            b1.HasIndex("CurrencyId");

                            b1.ToTable("ItemPrice");

                            b1.HasOne("FGO.Database.Models.Currency", "Currency")
                                .WithMany()
                                .HasForeignKey("CurrencyId");

                            b1.WithOwner()
                                .HasForeignKey("CustomisationItemId");

                            b1.Navigation("Currency");
                        });

                    b.Navigation("ItemType");

                    b.Navigation("Name");

                    b.Navigation("Prices");

                    b.Navigation("Rarity");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItemSource", b =>
                {
                    b.HasOne("FGO.Database.Models.CustomisationItem", null)
                        .WithMany("Sources")
                        .HasForeignKey("CustomisationItemId");

                    b.HasOne("FGO.Database.Models.LocalisedString", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItemType", b =>
                {
                    b.HasOne("FGO.Database.Models.LocalisedString", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("FGO.Database.Models.Rarity", b =>
                {
                    b.HasOne("FGO.Database.Models.LocalisedString", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.Navigation("Name");
                });

            modelBuilder.Entity("FGO.Database.Models.Season", b =>
                {
                    b.HasOne("FGO.Database.Models.LocalisedString", "Name")
                        .WithMany()
                        .HasForeignKey("NameId");

                    b.HasOne("FGO.Database.Models.LocalisedString", "Theme")
                        .WithMany()
                        .HasForeignKey("ThemeId");

                    b.Navigation("Name");

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("FGO.Database.Models.Tag", b =>
                {
                    b.HasOne("FGO.Database.Models.CustomisationItem", null)
                        .WithMany("Tags")
                        .HasForeignKey("CustomisationItemId");

                    b.HasOne("FGO.Database.Models.LocalisedString", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("FGO.Database.Models.CustomisationItem", b =>
                {
                    b.Navigation("Sources");

                    b.Navigation("Tags");
                });
#pragma warning restore 612, 618
        }
    }
}
